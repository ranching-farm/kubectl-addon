name: Build and Publish Go Binaries

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build binaries
      run: |
        VERSION=$(git describe --tags --always --dirty --abbrev=8)
        PLUGIN_NAME="ranching_farm"
        GOOS=darwin GOARCH=amd64 go build -ldflags "-X main.version=$VERSION" -o kubectl-${PLUGIN_NAME}_darwin_amd64 .
        GOOS=darwin GOARCH=arm64 go build -ldflags "-X main.version=$VERSION" -o kubectl-${PLUGIN_NAME}_darwin_arm64 .
        GOOS=linux GOARCH=amd64 go build -ldflags "-X main.version=$VERSION" -o kubectl-${PLUGIN_NAME}_linux_amd64 .
        GOOS=linux GOARCH=arm64 go build -ldflags "-X main.version=$VERSION" -o kubectl-${PLUGIN_NAME}_linux_arm64 .
        GOOS=windows GOARCH=amd64 go build -ldflags "-X main.version=$VERSION" -o kubectl-${PLUGIN_NAME}_windows_amd64.exe .

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.sha }}
        release_name: Release ${{ github.sha }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./kubectl-ranching_farm_${{ matrix.os }}_${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}
        asset_name: kubectl-ranching_farm_${{ matrix.os }}_${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}
        asset_content_type: application/octet-stream
      strategy:
        matrix:
          include:
            - os: darwin
              arch: amd64
            - os: darwin
              arch: arm64
            - os: linux
              arch: amd64
            - os: linux
              arch: arm64
            - os: windows
              arch: amd64